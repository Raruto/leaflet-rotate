{"version":3,"file":"leaflet-rotate.js","sources":["../src/dom/DomUtil.js","../src/dom/Draggable.js","../src/geometry/Point.js","../src/layer/DivOverlay.js","../src/layer/Popup.js","../src/layer/Tooltip.js","../src/layer/marker/Marker.js","../src/layer/marker/Icon.js","../src/layer/tile/GridLayer.js","../src/layer/vector/Canvas.js","../src/layer/vector/Renderer.js","../src/layer/vector/SVG.js","../src/map/Map.js","../src/map/handler/CompassBearing.js","../src/map/handler/ContainerMutation.js","../src/map/handler/TouchGestures.js","../src/map/handler/TouchRotate.js","../src/map/handler/ShiftKeyRotate.js","../src/map/handler/TouchZoom.js","../src/control/Rotate.js"],"sourcesContent":["/**\n * L.DomUtil\n */\nconst domUtilProto = L.extend({}, L.DomUtil);\n\nL.extend(L.DomUtil, {\n\n    setTransform: function(el, offset, scale, bearing, pivot) {\n        var pos = offset || new L.Point(0, 0);\n\n        if (!bearing) {\n            offset = pos._round();\n            return domUtilProto.setTransform.call(this, el, offset, scale);\n        }\n\n        pos = pos.rotateFrom(bearing, pivot);\n\n        el.style[L.DomUtil.TRANSFORM] =\n            'translate3d(' + pos.x + 'px,' + pos.y + 'px' + ',0)' +\n            (scale ? ' scale(' + scale + ')' : '') +\n            ' rotate(' + bearing + 'rad)';\n    },\n\n    setPosition: function(el, point, bearing, pivot) { // (HTMLElement, Point[, Boolean])\n        if (!bearing) {\n            return domUtilProto.setPosition.call(this, el, point);\n        }\n\n        /*eslint-disable */\n        el._leaflet_pos = point;\n        /*eslint-enable */\n\n        if (L.Browser.any3d) {\n            L.DomUtil.setTransform(el, point, undefined, bearing, pivot);\n        } else {\n            el.style.left = point.x + 'px';\n            el.style.top = point.y + 'px';\n        }\n    },\n\n    // Constants for rotation\n    DEG_TO_RAD: Math.PI / 180,\n    RAD_TO_DEG: 180 / Math.PI,\n\n});\n","/**\n * L.Draggable\n */\nL.Draggable.include({\n\n    updateMapBearing: function(mapBearing) {\n        this._mapBearing = mapBearing;\n    },\n\n});\n","/**\n * L.Point\n */\nL.extend(L.Point.prototype, {\n\n    // Rotate around (0,0) by applying the 2D rotation matrix:\n    // ⎡ x' ⎤ = ⎡ cos θ  -sin θ ⎤ ⎡ x ⎤\n    // ⎣ y' ⎦   ⎣ sin θ   cos θ ⎦ ⎣ y ⎦\n    // Theta must be given in radians.\n    rotate: function(theta) {\n        if (!theta) { return this; }\n        var sinTheta = Math.sin(theta);\n        var cosTheta = Math.cos(theta);\n\n        return new L.Point(\n            this.x * cosTheta - this.y * sinTheta,\n            this.x * sinTheta + this.y * cosTheta\n        );\n    },\n\n    // Rotate around (pivot.x, pivot.y) by:\n    // 1. subtract (pivot.x, pivot.y)\n    // 2. rotate around (0, 0)\n    // 3. add (pivot.x, pivot.y) back\n    // same as `this.subtract(pivot).rotate(theta).add(pivot)`\n    rotateFrom: function(theta, pivot) {\n        if (!theta) { return this; }\n        var sinTheta = Math.sin(theta);\n        var cosTheta = Math.cos(theta);\n        var cx = pivot.x,\n            cy = pivot.y;\n        var x = this.x - cx,\n            y = this.y - cy;\n\n        return new L.Point(\n            x * cosTheta - y * sinTheta + cx,\n            x * sinTheta + y * cosTheta + cy\n        );\n    },\n\n});\n","/**\n * L.DivOverlay\n */\nconst divOverlayProto = L.extend({}, L.DivOverlay.prototype);\n\nL.DivOverlay.include({\n\n    getEvents: function() {\n        return L.extend(divOverlayProto.getEvents.call(this), { rotate: this._updatePosition });\n    },\n\n    _updatePosition: function() {\n        if (!this._map) { return; }\n\n        var pos = this._map.latLngToLayerPoint(this._latlng),\n            offset = L.point(this.options.offset),\n            anchor = this._getAnchor();\n\n        if (this._zoomAnimated) {\n            // TODO: use divOverlayProto._updatePosition\n            if (this._map._rotate) {\n                pos = this._map.rotatedPointToMapPanePoint(pos);\n            }\n            L.DomUtil.setPosition(this._container, pos.add(anchor));\n        } else {\n            offset = offset.add(pos).add(anchor);\n        }\n\n        var bottom = this._containerBottom = -offset.y,\n            left = this._containerLeft = -Math.round(this._containerWidth / 2) + offset.x;\n\n        // bottom position the popup in case the height of the popup changes (images loading etc)\n        this._container.style.bottom = bottom + 'px';\n        this._container.style.left = left + 'px';\n    },\n\n});\n","/**\n * L.Popup\n */\nconst popupProto = L.extend({}, L.Popup.prototype);\n\nL.Popup.include({\n\n    _animateZoom: function(e) {\n        if (!this._map._rotate) {\n            popupProto._animateZoom.call(this, e);\n        }\n        var pos = this._map._latLngToNewLayerPoint(this._latlng, e.zoom, e.center),\n            anchor = this._getAnchor();\n\n        pos = this._map.rotatedPointToMapPanePoint(pos);\n\n        L.DomUtil.setPosition(this._container, pos.add(anchor));\n    },\n\n    _adjustPan: function() {\n        if (!this.options.autoPan || (this._map._panAnim && this._map._panAnim._inProgress)) { return; }\n\n        var map = this._map,\n            marginBottom = parseInt(L.DomUtil.getStyle(this._container, 'marginBottom'), 10) || 0,\n            containerHeight = this._container.offsetHeight + marginBottom,\n            containerWidth = this._containerWidth,\n            layerPos = new L.Point(this._containerLeft, -containerHeight - this._containerBottom);\n\n        layerPos._add(L.DomUtil.getPosition(this._container));\n\n        // var containerPos = map.layerPointToContainerPoint(layerPos);\n        // TODO: use popupProto._adjustPan\n        var containerPos = layerPos._add(this._map._getMapPanePos()),\n            padding = L.point(this.options.autoPanPadding),\n            paddingTL = L.point(this.options.autoPanPaddingTopLeft || padding),\n            paddingBR = L.point(this.options.autoPanPaddingBottomRight || padding),\n            size = map.getSize(),\n            dx = 0,\n            dy = 0;\n\n        if (containerPos.x + containerWidth + paddingBR.x > size.x) { // right\n            dx = containerPos.x + containerWidth - size.x + paddingBR.x;\n        }\n        if (containerPos.x - dx - paddingTL.x < 0) { // left\n            dx = containerPos.x - paddingTL.x;\n        }\n        if (containerPos.y + containerHeight + paddingBR.y > size.y) { // bottom\n            dy = containerPos.y + containerHeight - size.y + paddingBR.y;\n        }\n        if (containerPos.y - dy - paddingTL.y < 0) { // top\n            dy = containerPos.y - paddingTL.y;\n        }\n\n        // @namespace Map\n        // @section Popup events\n        // @event autopanstart: Event\n        // Fired when the map starts autopanning when opening a popup.\n        if (dx || dy) {\n            map\n                .fire('autopanstart')\n                .panBy([dx, dy]);\n        }\n    },\n\n});\n","/**\n * L.Tooltip\n */\nconst tooltipProto = L.extend({}, L.Tooltip.prototype);\n\nL.Tooltip.include({\n\n    _updatePosition: function() {\n        if (!this._map._rotate) {\n            return tooltipProto._updatePosition.call(this);\n        }\n        var pos = this._map.latLngToLayerPoint(this._latlng);\n\n        pos = this._map.rotatedPointToMapPanePoint(pos);\n        this._setPosition(pos);\n    },\n\n    _animateZoom: function(e) {\n        if (!this._map._rotate) {\n            return tooltipProto._animateZoom.call(this, e);\n        }\n        var pos = this._map._latLngToNewLayerPoint(this._latlng, e.zoom, e.center);\n\n        pos = this._map.rotatedPointToMapPanePoint(pos);\n        this._setPosition(pos);\n    },\n\n});\n","/**\n * L.Handler.MarkerDrag\n */\nvar markerDragProto;\n\nvar MarkerDrag = {\n\n    _onDragStart: function() {\n        if (!this._marker._map._rotate) {\n            return markerDragProto._onDragStart.call(this)\n        }\n        this._draggable.updateMapBearing(this._marker._map._bearing);\n    },\n\n    _onDrag: function(e) {\n        var marker = this._marker,\n            // TODO: use markerDragProto._onDrag\n            rotated_marker = marker.options.rotation || marker.options.rotateWithView,\n            shadow = marker._shadow,\n            iconPos = L.DomUtil.getPosition(marker._icon);\n\n        // TODO: use markerDragProto._onDrag\n        // update shadow position\n        if (!rotated_marker && shadow) {\n            L.DomUtil.setPosition(shadow, iconPos);\n        }\n\n        // TODO: use markerDragProto._onDrag\n        if (marker._map._rotate) {\n            // Reverse calculation from mapPane coordinates to rotatePane coordinates\n            iconPos = marker._map.mapPanePointToRotatedPoint(iconPos);\n        }\n        var latlng = marker._map.layerPointToLatLng(iconPos);\n\n        marker._latlng = latlng;\n        e.latlng = latlng;\n        e.oldLatLng = this._oldLatLng;\n\n        // TODO: use markerDragProto._onDrag\n        if (rotated_marker) marker.setLatLng(latlng); // use `setLatLng` to presisit rotation. low efficiency\n        else marker.fire('move', e); // `setLatLng` will trig 'move' event. we imitate here.\n\n        // @event drag: Event\n        // Fired repeatedly while the user drags the marker.\n        marker\n            .fire('drag', e);\n    },\n\n    _onDragEnd: function(e) {\n        if (this._marker._map._rotate) {\n            this._marker.update();\n        }\n        markerDragProto._onDragEnd.call(this, e);\n    },\n\n};\n\n/**\n * L.Marker\n */\nconst markerProto = L.extend({}, L.Marker.prototype);\n\nL.Marker.mergeOptions({\n\n    // @option rotation: Number = 0\n    // Rotation of this marker in rad\n    rotation: 0,\n\n    // @option rotateWithView: Boolean = false\n    // Rotate this marker when map rotates\n    rotateWithView: false,\n\n});\n\nL.Marker.include({\n\n    getEvents: function() {\n        return L.extend(markerProto.getEvents.call(this), { rotate: this.update });\n    },\n\n    onAdd: function(map) {\n        markerProto.onAdd.call(this, map);\n        map.on('rotate', this.update, this);\n    },\n\n    _initInteraction: function() {\n        var ret = markerProto._initInteraction.call(this);\n        if (this.dragging && this.dragging.enabled() && this._map && this._map._rotate) {\n            // L.Handler.MarkerDrag is used internally by L.Marker to make the markers draggable\n            markerDragProto = markerDragProto || Object.getPrototypeOf(this.dragging);\n            this.dragging._onDragStart = MarkerDrag._onDragStart.bind(this.dragging);\n            this.dragging._onDrag = MarkerDrag._onDrag.bind(this.dragging);\n            this.dragging._onDragEnd = MarkerDrag._onDragEnd.bind(this.dragging);\n            this.dragging.disable();\n            this.dragging.enable();\n        }\n        return ret;\n    },\n\n    _setPos: function(pos) {\n\n        // TODO: use markerProto._setPos\n        if (this._map._rotate) {\n            pos = this._map.rotatedPointToMapPanePoint(pos);\n        }\n\n        // TODO: use markerProto._setPos\n        var bearing = this.options.rotation || 0;\n        if (this.options.rotateWithView) {\n            bearing += this._map._bearing;\n        }\n\n        // TODO: use markerProto._setPos\n        L.DomUtil.setPosition(this._icon, pos, bearing, pos);\n\n        // TODO: use markerProto._setPos\n        if (this._shadow) {\n            L.DomUtil.setPosition(this._shadow, pos, bearing, pos);\n        }\n\n        this._zIndex = pos.y + this.options.zIndexOffset;\n\n        this._resetZIndex();\n    },\n\n    _updateZIndex: function(offset) {\n        if (!this._map._rotate) {\n            return markerProto._updateZIndex.call(this, offset)\n        }\n        this._icon.style.zIndex = Math.round(this._zIndex + offset);\n    },\n\n    setRotation: function(rotation) {\n        this.options.rotation = rotation;\n        this.update();\n    },\n\n});\n","/**\n * L.Icon\n */\nconst iconProto = L.extend({}, L.Icon.prototype);\n\nL.Icon.include({\n\n    _setIconStyles: function(img, name) {\n        var options = this.options;\n        var sizeOption = options[name + 'Size'];\n\n        if (typeof sizeOption === 'number') {\n            sizeOption = [sizeOption, sizeOption];\n        }\n\n        var size = L.point(sizeOption),\n            anchor = L.point(name === 'shadow' && options.shadowAnchor || options.iconAnchor ||\n                size && size.divideBy(2, true));\n\n        img.className = 'leaflet-marker-' + name + ' ' + (options.className || '');\n\n        if (anchor) {\n            img.style.marginLeft = (-anchor.x) + 'px';\n            img.style.marginTop = (-anchor.y) + 'px';\n            // TODO: use iconProto._setIconStyles\n            img.style[L.DomUtil.TRANSFORM + \"Origin\"] = anchor.x + \"px \" + anchor.y + \"px 0px\";\n        }\n\n        if (size) {\n            img.style.width = size.x + 'px';\n            img.style.height = size.y + 'px';\n        }\n    },\n\n});\n","/**\n * L.GridLayer\n */\nconst gridLayerProto = L.extend({}, L.GridLayer.prototype);\n\nL.GridLayer.include({\n\n    getEvents: function() {\n        var events = gridLayerProto.getEvents.call(this);\n        if (this._map._rotate && !this.options.updateWhenIdle) {\n            if (!this._onRotate) {\n                this._onRotate = L.Util.throttle(this._onMoveEnd, this.options.updateInterval, this);\n            }\n            events.rotate = this._onRotate;\n        }\n        return events;\n    },\n\n    _getTiledPixelBounds: function(center) {\n        if (!this._map._rotate) {\n            return gridLayerProto._getTiledPixelBounds.call(this, center);\n        }\n\n        var map = this._map,\n            mapZoom = map._animatingZoom ? Math.max(map._animateToZoom, map.getZoom()) : map.getZoom(),\n            scale = map.getZoomScale(mapZoom, this._tileZoom),\n            pixelCenter = map.project(center, this._tileZoom).floor(),\n            size = map.getSize(),\n            halfSize = new L.Bounds([\n                map.containerPointToLayerPoint([0, 0]).floor(),\n                map.containerPointToLayerPoint([size.x, 0]).floor(),\n                map.containerPointToLayerPoint([0, size.y]).floor(),\n                map.containerPointToLayerPoint([size.x, size.y]).floor()\n            ]).getSize().divideBy(scale * 2);\n\n        return new L.Bounds(pixelCenter.subtract(halfSize), pixelCenter.add(halfSize));\n    },\n\n});\n","/**\n * L.Canvas\n */\nconst canvasProto = L.extend({}, L.Canvas.prototype);\n\nL.Canvas.include({\n\n    onAdd: function() {\n        canvasProto.onAdd.call(this);\n        // When rotating the canvas itself, it is cleared by some weird reason, so redraw.\n        this._map.on('rotate', this._redraw, this);\n    },\n\n    onRemove: function() {\n        canvasProto.onRemove.call(this);\n        this._map.off('rotate', this._redraw, this);\n    },\n\n    _update: function() {\n        canvasProto._update.call(this);\n        // Tell paths to redraw themselves\n        this.fire('update')\n    },\n\n});\n","/**\n * L.Renderer\n */\nconst rendererProto = L.extend({}, L.Renderer.prototype);\n\nL.Renderer.include({\n\n    onAdd: function() {\n        rendererProto.onAdd.call(this);\n        // this._map.on('rotate', this._update, this);\n    },\n\n    onRemove: function() {\n        rendererProto.onRemove.call(this);\n        // this._map.off('rotate', this._update, this);\n    },\n\n    _updateTransform: function(center, zoom) {\n        if (!this._map._rotate) {\n            return rendererProto._updateTransform.call(this, center, zoom);\n        }\n        var scale = this._map.getZoomScale(zoom, this._zoom),\n            offset = this._map._latLngToNewLayerPoint(this._topLeft, zoom, center);\n        if (L.Browser.any3d) {\n            L.DomUtil.setTransform(this._container, offset, scale);\n        } else {\n            L.DomUtil.setPosition(this._container, offset);\n        }\n    },\n\n    _update: function() {\n        if (!this._map._rotate) {\n            return rendererProto._update.call(this);\n        }\n        // Update pixel bounds of renderer container (for positioning/sizing/clipping later)\n        // Subclasses are responsible of firing the 'update' event.\n        var p = this.options.padding,\n            map = this._map,\n            size = this._map.getSize(),\n            padMin = size.multiplyBy(-p),\n            padMax = size.multiplyBy(1 + p),\n            //// TODO: Somehow refactor this out into map.something() - the code is\n            ////   pretty much the same as in GridLayer.\n            clip = new L.Bounds([\n                map.containerPointToLayerPoint([padMin.x, padMin.y]).floor(),\n                map.containerPointToLayerPoint([padMin.x, padMax.y]).floor(),\n                map.containerPointToLayerPoint([padMax.x, padMin.y]).floor(),\n                map.containerPointToLayerPoint([padMax.x, padMax.y]).floor()\n            ]);\n        //min = this._map.containerPointToLayerPoint(size.multiplyBy(-p)).round();\n\n        this._bounds = clip;\n        // this._topLeft = clip.min;\n        this._topLeft = this._map.layerPointToLatLng(clip.min);\n\n        this._center = this._map.getCenter();\n        this._zoom = this._map.getZoom();\n    },\n\n});\n","/**\n * L.SVG\n */\nconst svgProto = L.extend({}, L.SVG.prototype);\n\nL.SVG.include({\n\n    _update: function() {\n        svgProto._update.call(this);\n        if (this._map._rotate) {\n            this.fire('update');\n        }\n    },\n\n});\n","/**\n * L.Map\n */\nconst mapProto = L.extend({}, L.Map.prototype);\n\nL.Map.mergeOptions({ rotate: false, bearing: 0, });\n\nL.Map.include({\n\n    initialize: function(id, options) { // (HTMLElement or String, Object)\n        if (options.rotate) {\n            this._rotate = true;\n            this._bearing = 0;\n        }\n        mapProto.initialize.call(this, id, options);\n        if(this.options.rotate){\n          this.setBearing(this.options.bearing);\n        }\n    },\n\n    // createPane: function(name, container) {\n    //     if (!this._rotate || name == 'mapPane') {\n    //         return mapProto.createPane.call(this, name, container);\n    //     }\n    //     // init \"rotatePane\"\n    //     if (!this._rotatePane) {\n    //         // this._pivot = this.getSize().divideBy(2);\n    //         this._rotatePane = mapProto.createPane.call(this, 'rotatePane', this._mapPane);\n    //         L.DomUtil.setPosition(this._rotatePane, new L.Point(0, 0), this._bearing, this._pivot);\n    //     }\n    //     return mapProto.createPane.call(this, name, container || this._rotatePane);\n    // },\n\n    containerPointToLayerPoint: function(point) { // (Point)\n        if (!this._rotate) {\n            return mapProto.containerPointToLayerPoint.call(this, point);\n        }\n        return L.point(point)\n            .subtract(this._getMapPanePos())\n            .rotateFrom(-this._bearing, this._getRotatePanePos())\n            .subtract(this._getRotatePanePos());\n    },\n\n    getBounds: function() {\n        if (!this._rotate) {\n            return mapProto.getBounds.call(this);\n        }\n        var size = this.getSize();\n        var topleft = this.layerPointToLatLng(this.containerPointToLayerPoint([0, 0])),\n            topright = this.layerPointToLatLng(this.containerPointToLayerPoint([size.x, 0])),\n            bottomright = this.layerPointToLatLng(this.containerPointToLayerPoint([size.x, size.y])),\n            bottomleft = this.layerPointToLatLng(this.containerPointToLayerPoint([0, size.y]));\n\n        // Use LatLngBounds' build-in constructor that automatically extends the bounds to fit the passed points\n        return new L.LatLngBounds([topleft, topright, bottomright, bottomleft]);\n    },\n\n    layerPointToContainerPoint: function(point) { // (Point)\n        if (!this._rotate) {\n            return mapProto.layerPointToContainerPoint.call(this, point);\n        }\n        return L.point(point)\n            .add(this._getRotatePanePos())\n            .rotateFrom(this._bearing, this._getRotatePanePos())\n            .add(this._getMapPanePos());\n    },\n\n    // Rotation methods\n    // setBearing will work with just the 'theta' parameter.\n    setBearing: function(theta) {\n        if (!L.Browser.any3d || !this._rotate) { return; }\n\n        var rotatePanePos = this._getRotatePanePos();\n        var halfSize = this.getSize().divideBy(2);\n        this._pivot = this._getMapPanePos().clone().multiplyBy(-1).add(halfSize);\n\n        rotatePanePos = rotatePanePos.rotateFrom(-this._bearing, this._pivot);\n\n        this._bearing = theta * L.DomUtil.DEG_TO_RAD; // TODO: mod 360\n        this._rotatePanePos = rotatePanePos.rotateFrom(this._bearing, this._pivot);\n\n        L.DomUtil.setPosition(this._rotatePane, rotatePanePos, this._bearing, this._pivot);\n\n        this.fire('rotate');\n    },\n\n    getBearing: function() {\n        return this._bearing * L.DomUtil.RAD_TO_DEG;\n    },\n\n    _initPanes: function() {\n        var panes = this._panes = {};\n        this._paneRenderers = {};\n\n        // @section\n        //\n        // Panes are DOM elements used to control the ordering of layers on the map. You\n        // can access panes with [`map.getPane`](#map-getpane) or\n        // [`map.getPanes`](#map-getpanes) methods. New panes can be created with the\n        // [`map.createPane`](#map-createpane) method.\n        //\n        // Every map has the following default panes that differ only in zIndex.\n        //\n        // @pane mapPane: HTMLElement = 'auto'\n        // Pane that contains all other map panes\n\n        this._mapPane = this.createPane('mapPane', this._container);\n        L.DomUtil.setPosition(this._mapPane, new L.Point(0, 0));\n\n        if (this._rotate) {\n            this._rotatePane = this.createPane('rotatePane', this._mapPane);\n            this._norotatePane = this.createPane('norotatePane', this._mapPane);\n\n            // @pane tilePane: HTMLElement = 2\n            // Pane for tile layers\n            this.createPane('tilePane', this._rotatePane);\n            // @pane overlayPane: HTMLElement = 4\n            // Pane for overlays like polylines and polygons\n            this.createPane('overlayPane', this._rotatePane);\n\n            // @pane shadowPane: HTMLElement = 5\n            // Pane for overlay shadows (e.g. marker shadows)\n            this.createPane('shadowPane', this._norotatePane);\n            // @pane markerPane: HTMLElement = 6\n            // Pane for marker icons\n            this.createPane('markerPane', this._norotatePane);\n            // @pane tooltipPane: HTMLElement = 650\n            // Pane for tooltips.\n            this.createPane('tooltipPane', this._norotatePane);\n            // @pane popupPane: HTMLElement = 700\n            // Pane for popups.\n            this.createPane('popupPane', this._norotatePane);\n        } else {\n            // @pane tilePane: HTMLElement = 2\n            // Pane for tile layers\n            this.createPane('tilePane');\n            // @pane overlayPane: HTMLElement = 4\n            // Pane for overlays like polylines and polygons\n            this.createPane('overlayPane');\n            // @pane shadowPane: HTMLElement = 5\n            // Pane for overlay shadows (e.g. marker shadows)\n            this.createPane('shadowPane');\n            // @pane markerPane: HTMLElement = 6\n            // Pane for marker icons\n            this.createPane('markerPane');\n            // @pane tooltipPane: HTMLElement = 650\n            // Pane for tooltips.\n            this.createPane('tooltipPane');\n            // @pane popupPane: HTMLElement = 700\n            // Pane for popups.\n            this.createPane('popupPane');\n        }\n\n        if (!this.options.markerZoomAnimation) {\n            L.DomUtil.addClass(panes.markerPane, 'leaflet-zoom-hide');\n            L.DomUtil.addClass(panes.shadowPane, 'leaflet-zoom-hide');\n        }\n    },\n\n    // @method rotatedPointToMapPanePoint(point: Point): Point\n    // Converts a coordinate from the rotated pane reference system\n    // to the reference system of the not rotated map pane.\n    rotatedPointToMapPanePoint: function(point) {\n        return L.point(point).rotate(this._bearing)._add(this._getRotatePanePos());\n    },\n\n    // @method mapPanePointToRotatedPoint(point: Point): Point\n    // Converts a coordinate from the not rotated map pane reference system\n    // to the reference system of the rotated pane.\n    mapPanePointToRotatedPoint: function(point) {\n        return L.point(point)._subtract(this._getRotatePanePos()).rotate(-this._bearing);\n    },\n\n    // offset of the specified place to the current center in pixels\n    _getCenterOffset: function(latlng) {\n        var centerOffset = mapProto._getCenterOffset.call(this, latlng);\n        if (this._rotate) {\n            centerOffset = centerOffset.rotate(this._bearing);\n        }\n        return centerOffset;\n    },\n\n    _getRotatePanePos: function() {\n        return this._rotatePanePos || new L.Point(0, 0);\n    },\n\n    _getNewPixelOrigin: function(center, zoom) {\n        var viewHalf = this.getSize()._divideBy(2);\n        if (!this._rotate) {\n            mapProto._getNewPixelOrigin.call(this, center, zoom);\n        }\n        return this.project(center, zoom)\n            .rotate(this._bearing)\n            ._subtract(viewHalf)\n            ._add(this._getMapPanePos())\n            ._add(this._getRotatePanePos())\n            .rotate(-this._bearing)\n            ._round();\n    },\n\n    _handleGeolocationResponse: function(pos) {\n        var lat = pos.coords.latitude,\n            lng = pos.coords.longitude,\n            // TODO: use mapProto._handleGeolocationResponse\n            hdg = pos.coords.heading,\n            latlng = new L.LatLng(lat, lng),\n            bounds = latlng.toBounds(pos.coords.accuracy),\n            options = this._locateOptions;\n\n        if (options.setView) {\n            var zoom = this.getBoundsZoom(bounds);\n            this.setView(latlng, options.maxZoom ? Math.min(zoom, options.maxZoom) : zoom);\n        }\n\n        var data = {\n            latlng: latlng,\n            bounds: bounds,\n            timestamp: pos.timestamp,\n            // TODO: use mapProto._handleGeolocationResponse\n            heading: hdg\n        };\n\n        for (var i in pos.coords) {\n            if (typeof pos.coords[i] === 'number') {\n                data[i] = pos.coords[i];\n            }\n        }\n\n        // @event locationfound: LocationEvent\n        // Fired when geolocation (using the [`locate`](#map-locate) method)\n        // went successfully.\n        this.fire('locationfound', data);\n    },\n\n});\n","/*\n * L.Map.CompassBearing will rotate the map according to a smartphone's compass.\n */\n\nL.Map.CompassBearing = L.Handler.extend({\n\n    initialize: function(map) {\n        if (!window.DeviceOrientationEvent) {\n            this._capable = false;\n            return;\n        }\n        this._capable = true;\n        this._map = map;\n\n        this._throttled = L.Util.throttle(this._onDeviceOrientation, 1000, this);\n    },\n\n    addHooks: function() {\n        if (this._capable && this._map._rotate) {\n            L.DomEvent.on(window, 'deviceorientation', this._throttled, this);\n        }\n    },\n\n    removeHooks: function() {\n        if (this._capable && this._map._rotate) {\n            L.DomEvent.off(window, 'deviceorientation', this._throttled, this);\n        }\n    },\n\n    _onDeviceOrientation: function(event) {\n        if (event.alpha !== null) {\n            this._map.setBearing(event.alpha - window.orientation);\n        }\n    },\n\n});\n\n// @section Handlers\n// @property compassBearing: Handler\n// Compass bearing handler.\nL.Map.addInitHook('addHandler', 'compassBearing', L.Map.CompassBearing);\n","/*\n * L.Handler.ContainerMutation triggers `invalidateResize` when the map's DOM container mutates.\n */\n\n// @namespace Map\n// @section Interaction Options\nL.Map.mergeOptions({\n\n    // @option trackContainerMutation: Boolean = false\n    // Whether the map uses [mutation observers](https://developer.mozilla.org/docs/Web/API/MutationObserver)\n    // to detect changes in its container and trigger `invalidateSize`. Disabled\n    // by default due to support not being available in all web browsers.\n    trackContainerMutation: false\n\n});\n\nL.Map.ContainerMutation = L.Handler.extend({\n\n    addHooks: function() {\n        if (!L.Browser.mutation) {\n            return;\n        }\n\n        if (!this._observer) {\n            this._observer = new MutationObserver(L.Util.bind(this._onMutation, this));\n        }\n\n        this._observer.observe(this._map.getContainer(), {\n            childList: false,\n            attributes: true,\n            characterData: false,\n            subtree: false,\n            attributeFilter: ['style']\n        });\n    },\n\n    removeHooks: function() {\n        if (!L.Browser.mutation) {\n            return;\n        }\n        this._observer.disconnect();\n    },\n\n    _onMutation: function() {\n        this._map.invalidateSize();\n    },\n\n});\n\n// @section Handlers\n// @property containerMutation: Handler\n// Container mutation handler (disabled unless [`trackContainerMutation`](#map-trackcontainermutation) is set).\nL.Map.addInitHook('addHandler', 'trackContainerMutation', L.Map.ContainerMutation);\n","/*\n * L.Handler.TouchGestures is both TouchZoom plus TouchRotate.\n */\n\n// @namespace Map\n// @section Interaction Options\nL.Map.mergeOptions({\n\n    // @option bounceAtZoomLimits: Boolean = true\n    // Set it to false if you don't want the map to zoom beyond min/max zoom\n    // and then bounce back when pinch-zooming.\n    bounceAtZoomLimits: true,\n\n});\n\nL.Map.TouchGestures = L.Handler.extend({\n\n    initialize: function(map) {\n        this._map = map;\n        this.rotate = !!this._map.options.touchRotate;\n        this.zoom = !!this._map.options.touchZoom;\n    },\n\n    addHooks: function() {\n        L.DomEvent.on(this._map._container, 'touchstart', this._onTouchStart, this);\n    },\n\n    removeHooks: function() {\n        L.DomEvent.off(this._map._container, 'touchstart', this._onTouchStart, this);\n    },\n\n    _onTouchStart: function(e) {\n        var map = this._map;\n\n        if (!e.touches || e.touches.length !== 2 || map._animatingZoom || this._zooming || this._rotating) { return; }\n\n        var p1 = map.mouseEventToContainerPoint(e.touches[0]),\n            p2 = map.mouseEventToContainerPoint(e.touches[1]),\n            vector = p1.subtract(p2);\n\n        this._centerPoint = map.getSize()._divideBy(2);\n        this._startLatLng = map.containerPointToLatLng(this._centerPoint);\n\n        if (this.zoom) {\n            if (map.options.touchZoom !== 'center') {\n                this._pinchStartLatLng = map.containerPointToLatLng(p1.add(p2)._divideBy(2));\n            }\n            this._startDist = p1.distanceTo(p2);\n            this._startZoom = map.getZoom();\n            this._zooming = true;\n        } else {\n            this._zooming = false;\n        }\n\n        if (this.rotate) {\n            this._startTheta = Math.atan(vector.x / vector.y);\n            this._startBearing = map.getBearing();\n            if (vector.y < 0) { this._startBearing += 180; }\n            this._rotating = true;\n        } else {\n            this._rotating = false;\n        }\n\n        this._moved = false;\n\n        map._stop();\n\n        L.DomEvent\n            .on(document, 'touchmove', this._onTouchMove, this)\n            .on(document, 'touchend touchcancel', this._onTouchEnd, this);\n\n        L.DomEvent.preventDefault(e);\n    },\n\n    _onTouchMove: function(e) {\n        if (!e.touches || e.touches.length !== 2 || !(this._zooming || this._rotating)) { return; }\n\n        var map = this._map,\n            p1 = map.mouseEventToContainerPoint(e.touches[0]),\n            p2 = map.mouseEventToContainerPoint(e.touches[1]),\n            vector = p1.subtract(p2),\n            scale = p1.distanceTo(p2) / this._startDist,\n            delta;\n\n        if (this._rotating) {\n            var theta = Math.atan(vector.x / vector.y);\n            var bearingDelta = (theta - this._startTheta) * L.DomUtil.RAD_TO_DEG;\n            if (vector.y < 0) { bearingDelta += 180; }\n            if (bearingDelta) {\n                /// TODO: The pivot should be the last touch point, but zoomAnimation manages to\n                ///   overwrite the rotate pane position. Maybe related to #3529.\n                map.setBearing(this._startBearing - bearingDelta);\n            }\n        }\n\n        if (this._zooming) {\n            this._zoom = map.getScaleZoom(scale, this._startZoom);\n\n            if (!map.options.bounceAtZoomLimits && (\n                (this._zoom < map.getMinZoom() && scale < 1) ||\n                (this._zoom > map.getMaxZoom() && scale > 1))) {\n                this._zoom = map._limitZoom(this._zoom);\n            }\n\n            if (map.options.touchZoom === 'center') {\n                this._center = this._startLatLng;\n                if (scale === 1) { return; }\n            } else {\n                // Get delta from pinch to center, so centerLatLng is delta applied to initial pinchLatLng\n                delta = p1._add(p2)._divideBy(2)._subtract(this._centerPoint);\n                if (scale === 1 && delta.x === 0 && delta.y === 0) { return; }\n\n                var alpha = -map.getBearing() * L.DomUtil.DEG_TO_RAD;\n\n                this._center = map.unproject(map.project(this._pinchStartLatLng).subtract(delta.rotate(alpha)));\n            }\n        }\n\n        if (!this._moved) {\n            map._moveStart(true, false);\n            this._moved = true;\n        }\n\n        L.Util.cancelAnimFrame(this._animRequest);\n\n        var moveFn = map._move.bind(map, this._center, this._zoom, { pinch: true, round: false }, undefined);\n        this._animRequest = L.Util.requestAnimFrame(moveFn, this, true);\n\n        L.DomEvent.preventDefault(e);\n    },\n\n    _onTouchEnd: function() {\n        if (!this._moved || !(this._zooming || this._rotating)) {\n            this._zooming = false;\n            this._rotating = false;\n            return;\n        }\n\n        this._zooming = false;\n        this._rotating = false;\n        L.Util.cancelAnimFrame(this._animRequest);\n\n        L.DomEvent\n            .off(document, 'touchmove', this._onTouchMove, this)\n            .off(document, 'touchend touchcancel', this._onTouchEnd, this);\n\n        if (this.zoom) {\n            // Pinch updates GridLayers' levels only when snapZoom is off, so snapZoom becomes noUpdate.\n            if (this._map.options.zoomAnimation) {\n                this._map._animateZoom(this._center, this._map._limitZoom(this._zoom), true, this._map.options.zoomSnap);\n            } else {\n                this._map._resetView(this._center, this._map._limitZoom(this._zoom));\n            }\n        }\n    },\n\n});\n\n// @section Handlers\n// @property touchGestures: Handler\n// Touch gestures handler.\nL.Map.addInitHook('addHandler', 'touchGestures', L.Map.TouchGestures);\n","/*\n * L.Handler.TouchRotate is used by L.Map to add two-finger rotation gestures.\n */\n\n// @namespace Map\n// @section Interaction Options\nL.Map.mergeOptions({\n\n    // @section Touch interaction options\n    // @option touchRotate: Boolean|String = *\n    // Whether the map can be rotated with a two-finger rotation gesture\n    touchRotate: false,\n\n});\n\nL.Map.TouchRotate = L.Handler.extend({\n\n    addHooks: function() {\n        this._map.touchGestures.enable();\n        this._map.touchGestures.rotate = true;\n    },\n\n    removeHooks: function() {\n        this._map.touchGestures.rotate = false;\n    },\n\n});\n\n// @section Handlers\n// @property touchZoom: Handler\n// Touch rotate handler.\nL.Map.addInitHook('addHandler', 'touchRotate', L.Map.TouchRotate);\n","/*\n * L.Handler.ShiftKeyRotate is used by L.Map to add shift-wheel rotation.\n */\n\n// @namespace Map\n// @section Interaction Options\nL.Map.mergeOptions({\n\n    // @section ShiftKey interaction options\n    // @option shiftKeyRotate: Boolean|String = *\n    // Whether the map can be rotated with a shit-wheel rotation\n    shiftKeyRotate: true,\n\n});\n\nL.Map.ShiftKeyRotate = L.Handler.extend({\n\n    addHooks: function() {\n        L.DomEvent.on(this._map._container, \"wheel\", this._handleShiftScroll, this);\n        // this._map.shiftKeyRotate.enable();\n        this._map.shiftKeyRotate.rotate = true;\n    },\n\n    removeHooks: function() {\n        L.DomEvent.off(this._map._container, \"wheel\", this._handleShiftScroll, this);\n        this._map.shiftKeyRotate.rotate = false;\n    },\n\n    _handleShiftScroll: function(e) {\n        if (e.shiftKey) {\n            e.preventDefault();\n            this._map.scrollWheelZoom.disable();\n            this._map.setBearing((this._map._bearing * L.DomUtil.RAD_TO_DEG) + Math.sign(e.deltaY) * 5);\n        } else {\n            this._map.scrollWheelZoom.enable();\n        }\n    },\n\n});\n\n// @section Handlers\n// @property touchZoom: Handler\n// Touch rotate handler.\nL.Map.addInitHook('addHandler', 'shiftKeyRotate', L.Map.ShiftKeyRotate);\n\n// decrease \"scrollWheelZoom\" handler priority over \"shiftKeyRotate\" handler\nL.Map.addInitHook(function() {\n    if (this.scrollWheelZoom.enabled() && this.shiftKeyRotate.enabled()) {\n        this.scrollWheelZoom.disable();\n        this.scrollWheelZoom.enable();\n    }\n});\n","/*\n * L.Handler.TouchZoom is used by L.Map to add pinch zoom on supported mobile browsers.\n */\n\n// @namespace Map\n// @section Interaction Options\nL.Map.mergeOptions({\n\n    // @section Touch interaction options\n    // @option touchZoom: Boolean|String = *\n    // Whether the map can be zoomed by touch-dragging with two fingers. If\n    // passed `'center'`, it will zoom to the center of the view regardless of\n    // where the touch events (fingers) were. Enabled for touch-capable web\n    // browsers except for old Androids.\n    touchZoom: L.Browser.touch,\n\n    bounceAtZoomLimits: false,\n});\n\nL.Map.TouchZoom = L.Handler.extend({\n\n    addHooks: function() {\n        L.DomUtil.addClass(this._map._container, 'leaflet-touch-zoom');\n        this._map.touchGestures.enable();\n        this._map.touchGestures.zoom = true;\n    },\n\n    removeHooks: function() {\n        L.DomUtil.removeClass(this._map._container, 'leaflet-touch-zoom');\n        this._map.touchGestures.zoom = false;\n    },\n\n});\n\n// @section Handlers\n// @property touchZoom: Handler\n// Touch zoom handler.\nL.Map.addInitHook('addHandler', 'touchZoom', L.Map.TouchZoom);\n","/**\n * L.Control.Rotate\n */\n\n// A tri-state control for map rotation. States are:\n// Locked (default)\n// Unlocked (user can pinch-rotate)\n// Follow (rotation follows device orientation, if available)\nL.Control.Rotate = L.Control.extend({\n\n    options: {\n        position: 'topleft',\n        closeOnZeroBearing: true\n    },\n\n    onAdd: function(map) {\n        this._onDeviceOrientation = L.Util.throttle(this._unthrottledOnDeviceOrientation, 100, this);\n\n        var container = this._container = L.DomUtil.create('div', 'leaflet-control-rotate leaflet-bar');\n\n        // this.button = L.Control.Zoom.prototype._createButton.call(this, 'R', 'leaflet-control-rotate', 'leaflet-control-rotate', container, this._toggleLock);\n\n        var arrow = this._arrow = L.DomUtil.create('span', 'leaflet-control-rotate-arrow');\n\n        arrow.style.backgroundImage = `url(\"data:image/svg+xml;charset=utf-8,%3Csvg width='29' height='29' viewBox='0 0 29 29' xmlns='http://www.w3.org/2000/svg' fill='%23333'%3E%3Cpath d='M10.5 14l4-8 4 8h-8z'/%3E%3Cpath d='M10.5 16l4 8 4-8h-8z' fill='%23ccc'/%3E%3C/svg%3E\")`;\n        arrow.style.cursor = 'grab';\n        arrow.style.display = 'block';\n        arrow.style.width = '100%';\n        arrow.style.height = '100%';\n        arrow.style.backgroundRepeat = 'no-repeat';\n        arrow.style.backgroundPosition = '50%';\n\n        // Copy-pasted from L.Control.Zoom\n        var link = this._link = L.DomUtil.create('a', 'leaflet-control-rotate-toggle', container);\n        link.appendChild(arrow);\n        link.href = '#';\n        link.title = 'Rotate map';\n\n        L.DomEvent\n            .on(link, 'dblclick', L.DomEvent.stopPropagation)\n            .on(link, 'mousedown', this._handleMouseDown, this)\n            .on(link, 'click', L.DomEvent.stop)\n            .on(link, 'click', this._cycleState, this)\n            .on(link, 'click', this._refocusOnMap, this);\n\n        if (!L.Browser.any3d) {\n            L.DomUtil.addClass(link, 'leaflet-disabled');\n        }\n\n        this._restyle();\n\n        map.on('rotate', this._restyle.bind(this));\n\n        // State flag\n        this._follow = false;\n        this._canFollow = false;\n\n        if (this.options.closeOnZeroBearing && map.getBearing() === 0) {\n            container.style.display = 'none';\n        }\n\n        return container;\n    },\n\n    _handleMouseDown: function(e) {\n        L.DomEvent.stopPropagation(e);\n        this.dragging = true;\n        this.dragstartX = e.pageX;\n        this.dragstartY = e.pageY;\n        L.DomEvent\n            .on(document, 'mousemove', this._handleMouseDrag, this)\n            .on(document, 'mouseup', this._handleMouseUp, this);\n    },\n\n    _handleMouseUp: function(e) {\n        L.DomEvent.stopPropagation(e);\n        this.dragging = false;\n\n        L.DomEvent\n            .off(document, 'mousemove', this._handleMouseDrag, this)\n            .off(document, 'mouseup', this._handleMouseUp, this);\n    },\n\n    _handleMouseDrag: function(e) {\n        if (!this.dragging) { return; }\n        var deltaX = e.clientX - this.dragstartX;\n        this._map.setBearing(deltaX);\n    },\n\n    _cycleState: function(ev) {\n        var map = this._map;\n\n        if (!map) { return; }\n\n        if (!map.touchRotate.enabled() && !map.compassBearing.enabled()) {\n            // Go from disabled to touch\n            map.touchRotate.enable();\n\n            // console.log('state is now: touch rotate');\n        } else {\n\n            if (!map.compassBearing.enabled()) {\n                // Go from touch to compass\n                map.touchRotate.disable();\n                map.compassBearing.enable();\n\n                // console.log('state is now: compass');\n\n                // It is possible that compass is not supported. If so,\n                // the hangler will automatically go from compass to disabled.\n            } else {\n                // Go from compass to disabled\n                map.compassBearing.disable();\n\n                // console.log('state is now: locked');\n\n                map.setBearing(0);\n                if (this.options.closeOnZeroBearing) {\n                    map.touchRotate.enable();\n                }\n            }\n        }\n        this._restyle();\n    },\n\n    _restyle: function() {\n        if (this._map.options.rotate) {\n            var map = this._map;\n            var bearing = map.getBearing();\n            if (this.options.closeOnZeroBearing && bearing) {\n                this._container.style.display = 'block';\n            }\n\n            var cssTransform = 'rotate(' + bearing + 'deg)';\n            this._arrow.style.transform = cssTransform;\n\n            if (map.compassBearing.enabled()) {\n                this._link.style.backgroundColor = 'orange';\n            } else if (map.touchRotate.enabled()) {\n                this._link.style.backgroundColor = null;\n            } else {\n                this._link.style.backgroundColor = 'grey';\n                if (this.options.closeOnZeroBearing && map.getBearing() === 0) {\n                    this._container.style.display = 'none';\n                }\n            }\n        } else {\n            L.DomUtil.addClass(this._link, 'leaflet-disabled');\n        }\n    },\n\n});\n\nL.control.rotate = function(options) {\n    return new L.Control.Rotate(options);\n};\n\nL.Map.mergeOptions({\n    rotateControl: true,\n});\n\nL.Map.addInitHook(function() {\n    if (this.options.rotateControl) {\n        var options = typeof this.options.rotateControl === 'object' ? this.options.rotateControl : {};\n        this.rotateControl = L.control.rotate(options);\n        this.addControl(this.rotateControl);\n    }\n});\n"],"names":["domUtilProto","L","extend","DomUtil","setTransform","el","offset","scale","bearing","pivot","pos","Point","_round","call","this","rotateFrom","style","TRANSFORM","x","y","setPosition","point","_leaflet_pos","Browser","any3d","undefined","left","top","DEG_TO_RAD","Math","PI","RAD_TO_DEG","Draggable","include","updateMapBearing","mapBearing","_mapBearing","prototype","rotate","theta","sinTheta","sin","cosTheta","cos","cx","cy","divOverlayProto","DivOverlay","getEvents","_updatePosition","_map","latLngToLayerPoint","_latlng","options","anchor","_getAnchor","_zoomAnimated","_rotate","rotatedPointToMapPanePoint","_container","add","bottom","_containerBottom","_containerLeft","round","_containerWidth","popupProto","Popup","_animateZoom","e","_latLngToNewLayerPoint","zoom","center","_adjustPan","autoPan","_panAnim","_inProgress","map","marginBottom","parseInt","getStyle","containerHeight","offsetHeight","containerWidth","layerPos","_add","getPosition","containerPos","_getMapPanePos","padding","autoPanPadding","paddingTL","autoPanPaddingTopLeft","paddingBR","autoPanPaddingBottomRight","size","getSize","dx","dy","fire","panBy","tooltipProto","Tooltip","markerDragProto","_setPosition","Icon","_setIconStyles","img","name","sizeOption","shadowAnchor","iconAnchor","divideBy","className","marginLeft","marginTop","width","height","MarkerDrag","_onDragStart","_marker","_draggable","_bearing","_onDrag","marker","rotated_marker","rotation","rotateWithView","shadow","_shadow","iconPos","_icon","mapPanePointToRotatedPoint","latlng","layerPointToLatLng","oldLatLng","_oldLatLng","setLatLng","_onDragEnd","update","markerProto","Marker","mergeOptions","onAdd","on","_initInteraction","ret","dragging","enabled","Object","getPrototypeOf","bind","disable","enable","_setPos","_zIndex","zIndexOffset","_resetZIndex","_updateZIndex","zIndex","setRotation","gridLayerProto","GridLayer","events","updateWhenIdle","_onRotate","Util","throttle","_onMoveEnd","updateInterval","_getTiledPixelBounds","mapZoom","_animatingZoom","max","_animateToZoom","getZoom","getZoomScale","_tileZoom","pixelCenter","project","floor","halfSize","Bounds","containerPointToLayerPoint","subtract","canvasProto","Canvas","_redraw","onRemove","off","_update","rendererProto","Renderer","_updateTransform","_zoom","_topLeft","p","padMin","multiplyBy","padMax","clip","_bounds","min","_center","getCenter","svgProto","SVG","mapProto","Map","initialize","id","setBearing","_getRotatePanePos","getBounds","topleft","topright","bottomright","bottomleft","LatLngBounds","layerPointToContainerPoint","rotatePanePos","_pivot","clone","_rotatePanePos","_rotatePane","getBearing","_initPanes","panes","_panes","_paneRenderers","_mapPane","createPane","_norotatePane","markerZoomAnimation","addClass","markerPane","shadowPane","_subtract","_getCenterOffset","centerOffset","_getNewPixelOrigin","viewHalf","_divideBy","_handleGeolocationResponse","lat","coords","latitude","lng","longitude","hdg","heading","LatLng","bounds","toBounds","accuracy","_locateOptions","setView","getBoundsZoom","maxZoom","data","timestamp","i","CompassBearing","Handler","window","DeviceOrientationEvent","_capable","_throttled","_onDeviceOrientation","addHooks","DomEvent","removeHooks","event","alpha","orientation","addInitHook","trackContainerMutation","ContainerMutation","mutation","_observer","MutationObserver","_onMutation","observe","getContainer","childList","attributes","characterData","subtree","attributeFilter","disconnect","invalidateSize","bounceAtZoomLimits","TouchGestures","touchRotate","touchZoom","_onTouchStart","touches","length","_zooming","_rotating","p1","mouseEventToContainerPoint","p2","vector","_centerPoint","_startLatLng","containerPointToLatLng","_pinchStartLatLng","_startDist","distanceTo","_startZoom","_startTheta","atan","_startBearing","_moved","_stop","document","_onTouchMove","_onTouchEnd","preventDefault","delta","bearingDelta","getScaleZoom","getMinZoom","getMaxZoom","_limitZoom","unproject","_moveStart","cancelAnimFrame","_animRequest","moveFn","_move","pinch","requestAnimFrame","zoomAnimation","zoomSnap","_resetView","TouchRotate","touchGestures","shiftKeyRotate","ShiftKeyRotate","_handleShiftScroll","shiftKey","scrollWheelZoom","sign","deltaY","touch","TouchZoom","removeClass","Control","Rotate","position","closeOnZeroBearing","_unthrottledOnDeviceOrientation","container","create","arrow","_arrow","backgroundImage","cursor","display","backgroundRepeat","backgroundPosition","link","_link","appendChild","href","title","stopPropagation","_handleMouseDown","stop","_cycleState","_refocusOnMap","_restyle","_follow","_canFollow","dragstartX","pageX","dragstartY","pageY","_handleMouseDrag","_handleMouseUp","deltaX","clientX","ev","compassBearing","cssTransform","transform","backgroundColor","control","rotateControl","addControl"],"mappings":"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"}